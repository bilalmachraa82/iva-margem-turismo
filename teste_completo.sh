#!/bin/bash
# Script para testar o funcionamento completo da aplica√ß√£o

echo "üß™ TESTE COMPLETO - IVA Margem Turismo"
echo "======================================"

# 1. Verificar se o backend est√° rodando
echo -e "\n1Ô∏è‚É£ Verificando backend..."
if curl -s http://localhost:8000/ > /dev/null 2>&1; then
    echo "‚úÖ Backend est√° rodando"
else
    echo "‚ùå Backend n√£o est√° rodando!"
    echo "Execute: cd backend && python3 -m uvicorn app.main:app --reload"
    exit 1
fi

# 2. Testar endpoint mock data
echo -e "\n2Ô∏è‚É£ Testando dados de demonstra√ß√£o..."
RESPONSE=$(curl -s http://localhost:8000/api/mock-data)
SALES_COUNT=$(echo $RESPONSE | grep -o '"sales_count":[0-9]*' | grep -o '[0-9]*')
COSTS_COUNT=$(echo $RESPONSE | grep -o '"costs_count":[0-9]*' | grep -o '[0-9]*')

echo "üìä Vendas: $SALES_COUNT documentos"
echo "üí∞ Custos: $COSTS_COUNT documentos"

if [ "$SALES_COUNT" -eq "26" ] && [ "$COSTS_COUNT" -eq "157" ]; then
    echo "‚úÖ Dados carregados corretamente!"
else
    echo "‚ùå Erro: Esperado 26 vendas e 157 custos"
fi

# 3. Verificar servidor frontend
echo -e "\n3Ô∏è‚É£ Para testar o frontend:"
echo "   1. Abra outro terminal"
echo "   2. Execute: python3 -m http.server 8080"
echo "   3. Acesse: http://localhost:8080/frontend/"
echo "   4. Limpe o cache: F12 ‚Üí Console ‚Üí localStorage.clear()"
echo "   5. Recarregue a p√°gina e teste"

echo -e "\n‚úÖ Checklist de Funcionamento:"
echo "   [ ] Backend responde na porta 8000"
echo "   [ ] Mock data retorna 26 vendas + 157 custos"
echo "   [ ] Frontend carrega sem erros"
echo "   [ ] Associa√ß√µes funcionam corretamente"
echo "   [ ] Excel √© gerado ao calcular"
echo "   [ ] Interface limpa e profissional"

echo -e "\nüìù Ficheiros limpos:"
echo "   - Removidos todos os test_*.py"
echo "   - Removidos todos os *.backup"
echo "   - Mantido apenas index.html (v2)"
echo "   - Estrutura organizada"

echo -e "\nüöÄ Aplica√ß√£o pronta para uso!"